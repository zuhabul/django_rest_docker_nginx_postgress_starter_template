# Generated by Django 3.0.5 on 2020-05-03 00:38

import app.storage_backends
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('profile_photo_url', models.FileField(null=True, storage=app.storage_backends.PublicMediaStorage(), upload_to='')),
                ('cover_photo_url', models.FileField(null=True, storage=app.storage_backends.PublicMediaStorage(), upload_to='')),
                ('phone_number', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(max_length=2000)),
                ('latitude', models.FloatField(blank=True)),
                ('longitude', models.FloatField(blank=True)),
                ('venue_str', models.CharField(blank=True, max_length=255)),
                ('location_str', models.CharField(max_length=255)),
                ('date_of_event', models.DateTimeField()),
                ('cover_photo', models.FileField(storage=app.storage_backends.PublicMediaStorage(), upload_to='')),
                ('total_liked', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('followers', models.IntegerField(default=0)),
                ('description', models.CharField(max_length=2000)),
                ('latitude', models.FloatField(blank=True)),
                ('longitude', models.FloatField(blank=True)),
                ('location_str', models.CharField(max_length=255)),
                ('cover_photo', models.FileField(storage=app.storage_backends.PublicMediaStorage(), upload_to='')),
                ('poster_photo', models.FileField(storage=app.storage_backends.PublicMediaStorage(), upload_to='')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('number_of_rating', models.IntegerField(default=0)),
                ('fb_profile_url', models.CharField(blank=True, max_length=255)),
                ('insta_profile_url', models.CharField(blank=True, max_length=255)),
                ('contact_number', models.CharField(max_length=255)),
                ('website_url', models.CharField(blank=True, max_length=255)),
                ('pinterest_url', models.CharField(blank=True, max_length=255)),
                ('total_liked', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='VendorCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('logo', models.FileField(storage=app.storage_backends.PublicMediaStorage(), upload_to='')),
                ('picture', models.FileField(null=True, storage=app.storage_backends.PublicMediaStorage(), upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='VendorPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(storage=app.storage_backends.PublicMediaStorage(), upload_to='')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='core.Vendor')),
            ],
        ),
        migrations.AddField(
            model_name='vendor',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendors', to='core.VendorCategory'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_text', models.CharField(max_length=255)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='core.Vendor')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='core.Vendor')),
            ],
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=255)),
                ('logo', models.FileField(null=True, storage=app.storage_backends.PublicMediaStorage(), upload_to='')),
                ('picture', models.FileField(null=True, storage=app.storage_backends.PublicMediaStorage(), upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type_of_vendors_needed', models.ManyToManyField(to='core.Vendor')),
            ],
        ),
        migrations.CreateModel(
            name='EventPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(storage=app.storage_backends.PublicMediaStorage(), upload_to='')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='core.Event')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='event_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='core.EventType'),
        ),
        migrations.AddField(
            model_name='event',
            name='vendor_list',
            field=models.ManyToManyField(to='core.Vendor'),
        ),
        migrations.AddField(
            model_name='user',
            name='fav_vendors',
            field=models.ManyToManyField(blank=True, to='core.Vendor'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='organized_events_list',
            field=models.ManyToManyField(blank=True, to='core.Event'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
